@model Codex.Models.AdminModels.AdminViewModels.CourseViewModel
@{
    ViewBag.Title = "Admin - Courses";
    ViewBag.UserName = "Admin Man";
}

<div class="row">
    <div class="col s6 l3 offset-l3">
        @Html.ActionLink("Users", "Users", "Admin", null, new {@class = "teal waves-effect waves-light btn fill-width center-align"})
    </div>
    <div class="col s6 l3">
        @Html.ActionLink("Courses", "Courses", "Admin", null, new {@class = "teal lighten-3 waves-effect waves-light btn fill-width center-align"})
    </div>
</div>

<div class="row">
    <div class="col s12">
        <ul class="collapsible popout" data-collapsible="accordion">
            @foreach (var course in Model.Courses) {
                <li class="grey lighten-2">
                    <div class="collapsible-header">
                        <div class="row clear-margin">
                            <!-- Course name and checkbox -->
                            <div class="col s3 truncate">
                                <input type="checkbox" id="@course.Id" value="@course.Id" name="course-row"/>
                                <label for="@course.Id">
                                    <span class="transparent-text">.</span>
                                </label>
                                <span class="search-criteria">@course.Name</span>
                            </div>

                            <!-- Course year -->
                            <div class="col s1 truncate">
                                <span class="search-criteria">@course.Year</span>
                            </div>

                            <!-- Course semester -->
                            <div class="col s2 truncate">
                                <span class="search-criteria">@course.Semester</span>
                            </div>
                        </div>
                    </div>

                    <!-- Collapsible body -->
                    <div class="collapsible-body">
                        <div class="card-panel collapsible-body-container">
                            @using (Html.BeginForm("EditCourse", "Admin", FormMethod.Post, new {id = course.Id + "-form", @class = "edit-course-form", role = "form"})) {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                                @Html.HiddenFor(m => course.Id, new {id = "id-" + course.Id, @class = "validate", Name = "Id." + course.Id})
                                @Html.HiddenFor(m => course.CourseId, new {id = "course-id-" + course.Id, @class = "validate", Name = "CourseId." + course.Id})

                                <div class="row">
                                    <!-- Name -->
                                    <div class="input-field col s12 m4">
                                        <i class="material-icons prefix">title</i>
                                        @Html.TextBoxFor(m => course.Name, new {id = "name-" + course.Id, @class = "validate", Name = "Name." + course.Id})
                                        @Html.ValidationMessageFor(m => course.Name, "", new {@class = "text-danger", data_valmsg_for = "Name." + course.Id})
                                        @Html.LabelFor(m => course.Name, new {@for = "name-" + course.Id})
                                    </div>

                                    <!-- Semester & Year -->
                                    <div class="col s12 m8">
                                        <div class="row">
                                            <!-- Semester -->
                                            <div class="col s12 m8">
                                                <div class="input-field">
                                                    <span>Semester</span>
                                                    <!-- Fall -->
                                                    @(course.SemesterId == 1
                                                          ? Html.RadioButtonFor(m => course.Semester, 1, new {@id = "semester-fall-" + course.Id, Name = "Semester." + course.Id, @checked = "checked"})
                                                          : Html.RadioButtonFor(m => course.Semester, 1, new {@id = "semester-fall-" + course.Id, Name = "Semester." + course.Id})
                                                          )
                                                    @Html.Label("semester-fall-" + course.Id, "Fall")

                                                    <!-- Spring -->
                                                    @(course.SemesterId == 2
                                                          ? Html.RadioButtonFor(m => course.Semester, 2, new {@id = "semester-spring-" + course.Id, Name = "Semester." + course.Id, @checked = "checked"})
                                                          : Html.RadioButtonFor(m => course.Semester, 2, new {@id = "semester-spring-" + course.Id, Name = "Semester." + course.Id})
                                                          )
                                                    @Html.Label("semester-spring-" + course.Id, "Spring")

                                                    <!-- Summer -->
                                                    @(course.SemesterId == 3
                                                          ? Html.RadioButtonFor(m => course.Semester, 3, new {@id = "semester-summer" + course.Id, Name = "Semester." + course.Id, @checked = "checked"})
                                                          : Html.RadioButtonFor(m => course.Semester, 3, new {@id = "semester-summer" + course.Id, Name = "Semester." + course.Id})
                                                          )
                                                    @Html.Label("semester-summer" + course.Id, "Summer")
                                                </div>
                                            </div>
                                            <!-- Year -->
                                            <div class="input-field col s12 m4">
                                                @Html.TextBoxFor(m => course.Year, new {id = "year-" + course.Id, type = "number", min = 2000, Name = "Year." + course.Id})
                                                @Html.LabelFor(m => course.Year, new {@for = "year-" + course.Id})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @*
                                <!-- Description -->
                                <div class="row">
                                    <div class="input-field col s12">
                                        <i class="material-icons prefix">description</i>
                                        @Html.TextAreaFor(m => m.NewCourseModel.Description, new {@class = "validate materialize-textarea"})
                                        @Html.ValidationMessageFor(m => m.NewCourseModel.Description, "", new {@class = "text-danger"})
                                        @Html.LabelFor(m => m.NewCourseModel.Description)
                                    </div>
                                </div>
                                *@

                                <!-- Save button -->
                                <div class="row">
                                    <div class="col s12 m5 offset-m7 l3 offset-l9">
                                        <a href="#" class="btn waves-effect waves-light edit-course-button fill-width">
                                            Save
                                        </a>
                                    </div>
                                </div>
                            }

                            <div class="divider"></div>

                            <!-- Teachers and assistants -->
                            <div class="row section">
                                <div class="col s12">
                                    <table class="striped centered bordered responsive-table">
                                        <thead>
                                            <tr>
                                                <th data-field="id" class="hiddendiv">Id</th>
                                                <th data-field="name">Name</th>
                                                <th data-field="email">Email</th>
                                                <th data-field="position">Position</th>
                                                <th data-field="remove">Remove</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @foreach (var user in course.Teachers) {
                                                <tr>
                                                    <td class="hiddendiv">@user.Id</td>
                                                    <td>@user.Name</td>
                                                    <td>@user.Email</td>
                                                    <td>
                                                        @if (user.IsAssistant.HasValue) {
                                                            if (user.IsAssistant == true) {
                                                                @:Assistant
                                                            }
                                                            else {
                                                                @:Teacher
                                                            }
                                                        }
                                                    </td>
                                                    <td>
                                                        <a href="#" class="remove-teacher-from-course">
                                                            <i class="material-icons red-text">clear</i>
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>

                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>

<!-- Pencil menu -->
<div class="fixed-action-btn">
    <a class="btn-floating btn-large red">
        <i class="large material-icons">mode_edit</i>
    </a>
    <ul>
        <li>
            <a id="delete-selected-courses-modal-button" class="btn-floating red tooltipped" data-position="left" data-delay="50" data-tooltip="Delete selected courses">
                <i class="material-icons">delete</i>
            </a>
        </li>
        <li>
            <a class="modal-trigger btn-floating blue tooltipped" href="#new-course-modal" data-position="left" data-delay="50" data-tooltip="New course">
                <i class="material-icons">book</i>
            </a>
        </li>
    </ul>
</div>

<div id="new-course-modal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4 class="center-align">New Course</h4>
        <div class="divider"></div>

        @using (Html.BeginForm("CreateCourse", "Admin", FormMethod.Post, new {@id = "create-course-form", role = "form"})) {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">title</i>
                    @Html.TextBoxFor(m => m.NewCourseModel.Name, new {@class = "validate"})
                    @Html.ValidationMessageFor(m => m.NewCourseModel.Name, "", new {@class = "text-danger"})
                    @Html.LabelFor(m => m.NewCourseModel.Name)
                </div>
            </div>

            @*
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">description</i>
                    @Html.TextAreaFor(m => m.NewCourseModel.Description, new {@class = "validate materialize-textarea"})
                    @Html.ValidationMessageFor(m => m.NewCourseModel.Description, "", new {@class = "text-danger"})
                    @Html.LabelFor(m => m.NewCourseModel.Description)
                </div>
            </div>
            *@

            <div class="row">
                <div class="input-field col s6">
                    <span>Semester</span>
                    @Html.RadioButtonFor(m => m.NewCourseModel.Semester, 1, new {@id = "semester-fall", @checked = true})
                    @Html.Label("semester-fall", "Fall")

                    @Html.RadioButtonFor(m => m.NewCourseModel.Semester, 2, new {@id = "semester-spring"})
                    @Html.Label("semester-spring", "Spring")

                    @Html.RadioButtonFor(m => m.NewCourseModel.Semester, 3, new {@id = "semester-summer"})
                    @Html.Label("semester-summer", "Summer")
                </div>

                <div class="input-field col s6">
                    @Html.TextBoxFor(m => m.NewCourseModel.Year, new {Value = DateTime.Now.Year, @type = "number", min = 2000})
                    @Html.LabelFor(m => m.NewCourseModel.Year)
                </div>
            </div>
        }

    </div>
    <div class="modal-footer">
        <a href="#" class="modal-action modal-close waves-effect waves-green btn-flat">Cancel</a>
        <a href="#" id="create-course-button" class="waves-effect waves-green btn-flat">Create</a>
    </div>
</div>

<!-- Delete Selected Courses modal -->
<div id="delete-selected-courses-modal" class="modal">
    <div class="modal-content">
        <h4 class="center-align">Delete seleced courses</h4>
        <div class="divider"></div>

        <p>Are you sure you want to delete these courses?</p>
        <p>This action cannot be undone!</p>

    </div>
    <div class="modal-footer">
        <a href="#" id="delete-selected-courses-button" class="waves-effect waves-green btn-flat">Delete</a>
        <a href="#" class="modal-action modal-close waves-effect waves-green btn-flat">Cancel</a>
    </div>
</div>